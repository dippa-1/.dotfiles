---
- name: Clone git repos for
  hosts: servers
  vars:
    dev_dir: "~/dev"
    prod_dir: "~/prod"
  tasks:
  - name: Check that required packages are present
    command: "which {{ item }}"
    loop:
      - docker
      - "/home/{{ ansible_user }}/.cargo/bin/cargo"
      - make
      - git
    register: packages_installed
    changed_when: false
    failed_when: packages_installed.rc != 0
  - name: Ensure projects dir exists
    file:
      path: "{{ item }}"
      state: directory
    loop:
    - "{{ dev_dir }}"
    - "{{ prod_dir }}"
  - name: Ensure dev github repos are up to date
    git:
      repo: "git@github.com:dippa-1/{{ item }}.git"
      dest: "{{ dev_dir }}/{{ item }}"
      accept_hostkey: true
      clone: true
      update: true
    loop:
      - cs-tracker-api
      - steam-inventory-plus-web
      - csgo-inventory-tracker-backend
  - name: Ensure prod github repos are up to date
    git:
      repo: "git@github.com:dippa-1/{{ item }}.git"
      dest: "{{ prod_dir }}/{{ item }}"
      accept_hostkey: true
      clone: true
      update: true
    loop:
      - cs-tracker-api
      - steam-inventory-plus-web
  - name: Ensure Rust dependencies are up to date
    become: true
    apt:
      package:
        - pkg-config
        - libssl-dev
        - libpq-dev
      state: latest
  - name: Build api backend
    command:
      cmd: "bash -lc 'cargo build'"
      chdir: "{{ prod_dir }}/{{ item }}"
    loop:
    - cs-tracker-api
    tags: cargo
  - name: Ensure postgres docker containers are running
    command:
      cmd: docker compose up -d
      chdir: "{{ prod_dir }}/cs-tracker-api"

  - name: Ensure Python and pip are installed
    become: true
    apt:
      package: 
        - python3
        - python3-pip
      state: present

  # - name: Run dgraph to csv shell migration scripts
  #   command: 
  #     cmd: "bash {{ item }}"
  #     chdir: "{{ dev_dir }}/csgo-inventory-tracker-backend/migration"
  #   with_items:
  #     - 0001_get_all_inventory_history_points.sh
  #     - 0003_get_all_skin_history_points.sh
  #     - 0005_get_tracked_inventories.sh
  #     - 0007_get_items.sh

  # - name: Run dgraph to csv python migration scripts
  #   command: 
  #     cmd: "python3 {{ item }}"
  #     chdir: "{{ dev_dir }}/csgo-inventory-tracker-backend/migration"
  #   with_items:
  #     - 0002_convert_inventory_history_points_to_csv.py
  #     - 0004_convert_skin_history_points_to_csv.py
  #     - 0006_convert_inventories_to_csv.py
  #     - 0008_convert_items_to_csv.py
  # - name: Copy CSV files into the Postgres container
  #   command:
  #     cmd: "docker cp {{ item.src }} postgres_container:{{ item.dest }}"
  #     chdir: "{{ dev_dir }}/csgo-inventory-tracker-backend/migration"
  #   with_items:
  #     - src: "0002_output.csv"
  #       dest: "/inventory_history.csv"
  #     - src: "0004_output.csv"
  #       dest: "/item_history.csv"
  #     - src: "0006_output.csv"
  #       dest: "/inventories.csv"
  #     - src: "0008_output.csv"
  #       dest: "/items.csv"

  - name: Install diesel and run migration
    command:
      cmd: bash -lc 'make setup'
      chdir: "{{ prod_dir }}/cs-tracker-api"
